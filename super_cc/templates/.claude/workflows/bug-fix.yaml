name: bug-fix
description: Diagnostic workflow for identifying and fixing bugs
version: "1.0"

parameters:
  - name: bug_description
    description: Description of the bug or error
    required: true
  - name: error_logs
    description: Error logs or stack traces
    required: false
  - name: affected_files
    description: File patterns that might be affected
    default: "src/**/*.py"

parallel_groups:
  diagnostic_checks:
    description: Parallel diagnostic analysis
    agents:
      - static-analyzer
      - security-scanner
      - log-analyzer

steps:
  - name: context_synthesis
    agent: context-synth
    description: "Analyze codebase context around bug"
    params:
      files: "{{parameters.affected_files}}"
    output_var: "bug_context"
  
  - name: initial_diagnosis
    agent: debugger
    description: "Perform initial bug analysis"
    inputs:
      - "{{parameters.bug_description}}"
      - "{{parameters.error_logs}}"
      - "{{bug_context}}"
    output_var: "initial_diagnosis"
  
  - name: parallel_diagnostics
    type: parallel_group
    group: diagnostic_checks
    description: "Run diagnostic checks in parallel"
    inputs:
      - "{{bug_context}}"
      - "{{initial_diagnosis}}"
    output_var: "diagnostic_results"
  
  - name: root_cause_analysis
    agent: debugger
    description: "Identify root cause of the bug"
    inputs:
      - "{{initial_diagnosis}}"
      - "{{diagnostic_results}}"
    output_var: "root_cause"
  
  - name: write_failing_test
    agent: tester
    description: "Write test that reproduces the bug"
    inputs:
      - "{{root_cause}}"
      - "{{parameters.bug_description}}"
    output_var: "bug_test"
  
  - name: verify_bug_reproduction
    type: bash
    command: "pytest -v {{bug_test}}"
    description: "Confirm test reproduces the bug"
    expected_result: "failure"
  
  - name: implement_fix
    agent: main
    action: "fix"
    description: "Implement fix based on root cause analysis"
    inputs:
      - "{{root_cause}}"
      - "{{bug_test}}"
    output_var: "fix_implementation"
  
  - name: test_fix
    type: bash
    command: "pytest -v {{bug_test}}"
    description: "Verify fix resolves the bug"
    output_var: "fix_test_results"
  
  - name: regression_testing
    type: bash
    command: "pytest -v"
    description: "Run full test suite to check for regressions"
    output_var: "regression_results"
  
  - name: code_review
    agent: reviewer
    description: "Review fix implementation"
    inputs:
      - "{{fix_implementation}}"
      - "{{bug_test}}"
      - "{{regression_results}}"
    output_var: "fix_review"

success_criteria:
  - bug_test_passes: true
  - no_regressions: true
  - code_review_approved: true

state_tracking:
  - bug_status
  - test_results
  - fix_status