[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "super-cc"
version = "1.0.0"
description = "Transform any repository with Claude Code into a high-productivity dev envrionment"
readme = "README.md"
authors = [
{name = "Xander Hnasko"},
]
license = {file = "LICENSE"}
requires-python = ">=3.8"
dependencies = []
keywords = ["claude", "ai", "development", "workflow", "automation", "agents", "subagents"]
classifiers = [
"Development Status :: 5 - Production/Stable",
"Environment :: Console",
"Intended Audience :: Developers",
"License :: OSI Approved :: MIT License",
"Operating System :: OS Independent",
"Programming Language :: Python :: 3",
"Programming Language :: Python :: 3.8",
"Programming Language :: Python :: 3.9",
"Programming Language :: Python :: 3.10",
"Programming Language :: Python :: 3.11",
"Programming Language :: Python :: 3.12",
"Topic :: Software Development :: Libraries :: Python Modules",
"Topic :: Software Development :: Quality Assurance",
"Topic :: Software Development :: Testing",
"Topic :: Utilities",
]

[project.urls]
Homepage = "[https://github.com/xanderhnasko/superclaude](https://github.com/xanderhnasko/superclaude)"
Documentation = "[https://github.com/xanderhnasko/superclaude](https://github.com/xanderhnasko/superclaude)#readme"
Repository = "[https://github.com/xanderhnasko/superclaude](https://github.com/xanderhnasko/superclaude)"
Issues = "[https://github.com/xanderhnasko/superclaude](https://github.com/xanderhnasko/superclaude)/issues"

[project.scripts]
super-cc = "super\_cc.cli:main"

[project.optional-dependencies]
dev = [
"pytest>=7.0",
"black>=23.0",
"ruff>=0.1.0",
"mypy>=1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["super\_cc"]

[tool.hatch.build.targets.wheel.force-include]
"super\_cc/templates" = "super\_cc/templates"

[tool.black]
line-length = 88
target-version = ['py38']
include = '.pyi?$'
extend-exclude = '''
/(

# directories

.eggs
\| \.git
\| \.hg
\| \.mypy\_cache
\| \.tox
\| \.venv
\| build
\| dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
"E", # pycodestyle errors
"W", # pycodestyle warnings
"F", # pyflakes
"I", # isort
"B", # flake8-bugbear
"C4", # flake8-comprehensions
"UP", # pyupgrade
]
ignore = [
"E501", # line too long, handled by black
"B008", # do not perform function calls in argument defaults
"C901", # too complex
]

[tool.ruff.per-file-ignores]
"**init**.py" = ["F401"]

[tool.mypy]
python\_version = "3.8"
warn\_return\_any = true
warn\_unused\_configs = true
disallow\_untyped\_defs = true
disallow\_incomplete\_defs = true
check\_untyped\_defs = true
disallow\_untyped\_decorators = true
no\_implicit\_optional = true
warn\_redundant\_casts = true
warn\_unused\_ignores = true
warn\_no\_return = true
warn\_unreachable = true
strict\_equality = true

[[tool.mypy.overrides]]
module = "tests.\*"
disallow\_untyped\_defs = false